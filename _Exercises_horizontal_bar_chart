Игральная кость - шестигранный кубик, который бросается несколько раз. Гистограмма - это графическое представление данных в виде столбцов или колонок.

histogram.js
Реализуйте и экспортируйте по умолчанию функцию, которая выводит на экран горизонтальную гистограмму. Функция принимает на вход количество бросков кубика и функцию, которая имитирует бросок игральной кости (её реализовывать не нужно). Вызов этой функции генерирует значение от 1 до 6, что соответствует одной из граней игральной кости.

Гистограмма содержит строки, каждой из которых соответствует грань игральной кости и количество выпадений этой грани. Результаты отображаются графически (с помощью символов #) и в виде числового значения, за исключением случаев, когда количество равно 0 (нулю).

Примеры
import play from '../histogram.js';

play(100, rollDie);
// => 1|####################### 23
//    2|################## 18
//    3|############# 13
//    4|#################### 20
//    5|############ 12
//    6|############## 14

play(13, rollDie);
// => 1|
//    2|## 2
//    3|# 1
//    4|## 2
//    5|#### 4
//    6|#### 4
Подсказки:
Гистограмма
Для решения задачи используйте функции из библиотеки lodash


import _ from 'lodash';

// BEGIN (write your solution here)
const play = (num, rollDie) => {
  const itog = _.times(num, rollDie);
  const newObject = itog.reduce((acc, item) => {
    if (!_.has(acc, item)) {
      acc[item] = '';
    }
    acc[item] += '#';
    return acc;
  }, {});
  const keys = Object.keys(newObject);
  const numbers = [1, 2, 3, 4, 5, 6];
  const newNumbers = numbers.reduce((acc, item) => {
    if (!_.has(keys, item)) {
      acc[item] = '';
    }
    acc[item] = newObject[item];
    return acc;
  }, {});
  Object.keys(newNumbers)
    .map((key) => {
      if (newNumbers[key] === undefined) {
        return console.log(`${key}|`);
      }
      return console.log(`${key}|${newNumbers[key]} ${newNumbers[key].length}`);
    });
};
export default play;
